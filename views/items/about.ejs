<!DOCTYPE html>
<html lang="en">
    <%- include('../partials/head.ejs') %> 
<body>
    <%- include('../partials/header.ejs') %> 
    <!--content section -->
    <section class="container style-section">
        <div class="container">
            <div class="style-scontainer mx-xs-3">
                <h1 class="h1 style-section-title">About</h1>
                <div>
                    <p class="text-muted lh-lg">
                        ItemGen is an NodeJS, Express application that uses server side rendering through the use of template engine such as Embedded Javascript Template or 
                        EJS and its also possible because express works best with EJS. It utilized HTML, CSS, Booststrap, JS for ajax calls in the front-end and NodeJS, Express and other 
                        dependincies such as cors, morgan, multer, sharp, pg and uuid for the back-end. This application did use postgresSQL database which is a relational database 
                        it made possible for the application to communicated with the database using the node postgres interface (pg). This application can generate or create a item 
                        spicifying the item's name, quantity, price, category, description and image. Other than that making sure that all uploaded images have been optimized or being compressed once
                        its stored in the server. And also it allows to edit some information, delete or view a spicific item. 
                    </p>
                </div>
            </div>
        </div>
    </section>

    <%- include('../partials/footer.ejs') %> 

    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js" integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.min.js" integrity="sha384-Atwg2Pkwv9vp0ygtn1JAojH0nYbwNJLPhwyoVbhoPwBhjQPR5VtM2+xf0Uwh9KtT" crossorigin="anonymous"></script>
</body>
</html>